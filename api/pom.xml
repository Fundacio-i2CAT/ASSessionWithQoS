<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.i2cat</groupId>
  <artifactId>assession-with-qos</artifactId>
  <packaging>jar</packaging>
  <version>0.1.0</version>
  <name>scef</name>

  <parent>
     <groupId>org.springframework.boot</groupId>
     <artifactId>spring-boot-starter-parent</artifactId>
     <version>3.1.12</version>
     <relativePath/>
  </parent>

  <properties>
    <java.version>17</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <springdoc.version>1.6.15</springdoc.version>
    <openapi-generator-maven-plugin.version>7.0.0</openapi-generator-maven-plugin.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-ui</artifactId>
      <version>${springdoc.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.28</version>
    </dependency>
    <dependency>
      <groupId>jakarta.validation</groupId>
      <artifactId>jakarta.validation-api</artifactId>
      <version>3.0.2</version>
    </dependency>
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
      <version>2.1.1</version>
    </dependency>
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <version>6.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>0.2.3</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <version>4.12.0</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>logging-interceptor</artifactId>
      <version>4.12.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.10</version>
    </dependency>
    <dependency>
      <groupId>io.gsonfire</groupId>
      <artifactId>gson-fire</artifactId>
      <version>1.8.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.oltu.oauth2</groupId>
      <artifactId>org.apache.oltu.oauth2.client</artifactId>
      <version>1.0.2</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>${openapi-generator-maven-plugin.version}</version>
        <executions>
          <execution>
            <!-- SCEF server to receive QoS sessions from SCS/AS (CAMARA Transformation Function) -->
            <id>scef-server</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/resources/TS29122_AsSessionWithQoS.yaml</inputSpec>
              <generatorName>spring</generatorName>
              <apiPackage>autogen.scef.api</apiPackage>
              <modelPackage>autogen.scef.api.model</modelPackage>
	            <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
	            <configOptions>
		            <interfaceOnly>true</interfaceOnly>
		            <requestMappingMode>api_interface</requestMappingMode>
                <useJakartaEe>true</useJakartaEe>
	            </configOptions>
            </configuration>
          </execution>
          <execution>
            <!-- SCS/AS (CAMARA Transformation Function) client to send notifications received from PCF -->
            <id>scsas-client</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/resources/TS29122_AsSessionWithQoS.yaml</inputSpec>
              <generatorName>java</generatorName>
              <library>okhttp-gson</library>
              <apiPackage>autogen.scef.notification.api</apiPackage>
              <invokerPackage>autogen.scef.notification.api</invokerPackage>
              <modelPackage>autogen.scef.notification.api.model</modelPackage>
              <apisToGenerate>AsSessionWithQoSApiSubscriptionEventsNotificationCallback</apisToGenerate>
	            <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
              <openapiNormalizer>SIMPLIFY_ANYOF_STRING_AND_ENUM_STRING=true</openapiNormalizer>
	            <configOptions>
		            <oas3>true</oas3>
                <useSpringController>true</useSpringController>
                <useSpringfox>false</useSpringfox>
		            <useJakartaEe>true</useJakartaEe>
                <!-- Use modern java8 date/time api -->
                <dateLibrary>java8</dateLibrary>
                <java8>true</java8>
                <!-- Do not include any validation with the client -->
                <useBeanValidation>false</useBeanValidation>
                <performBeanValidation>false</performBeanValidation>
                <interfaceOnly>false</interfaceOnly>
                <useOptional>false</useOptional>
                <!-- Make the models serializable -->
                <serializableModel>true</serializableModel>
                <disallowAdditionalPropertiesIfNotPresent>false</disallowAdditionalPropertiesIfNotPresent>
	            </configOptions>
            </configuration>
          </execution>
          <!-- The callbacks are not generated correctly if there are no paths for them. So, we will
              add the server to receive notifications manually to the controller -->
          <!--
          <execution>
            <id>scef-notification-receiver</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/resources/TS29514_Npcf_PolicyAuthorization.yaml</inputSpec>
              <generatorName>spring</generatorName>
              <apiPackage>autogen.pcf.notification.api</apiPackage>
              <modelPackage>autogen.pcf.notification.api.model</modelPackage>
	            <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
	            <configOptions>
		            <interfaceOnly>true</interfaceOnly>
		            <requestMappingMode>api_interface</requestMappingMode>
                <useJakartaEe>true</useJakartaEe>
	            </configOptions>
            </configuration>
          </execution>
          -->
          <execution>
            <!-- PCF client to request policies -->
            <id>pcf-client</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/resources/TS29514_Npcf_PolicyAuthorization.yaml</inputSpec>
              <generatorName>java</generatorName>
              <library>okhttp-gson</library>
              <apiPackage>autogen.pcf.api</apiPackage>
              <invokerPackage>autogen.pcf.api</invokerPackage>
              <modelPackage>autogen.pcf.api.model</modelPackage>
	            <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
              <openapiNormalizer>SIMPLIFY_ANYOF_STRING_AND_ENUM_STRING=true</openapiNormalizer>
	            <configOptions>
		            <oas3>true</oas3>
                <useSpringController>true</useSpringController>
                <useSpringfox>false</useSpringfox>
		            <useJakartaEe>true</useJakartaEe>
                <!-- Use modern java8 date/time api -->
                <dateLibrary>java8</dateLibrary>
                <java8>true</java8>
                <!-- Do not include any validation with the client -->
                <useBeanValidation>false</useBeanValidation>
                <performBeanValidation>false</performBeanValidation>
                <interfaceOnly>false</interfaceOnly>
                <useOptional>false</useOptional>
                <!-- Make the models serializable -->
                <serializableModel>true</serializableModel>
                <disallowAdditionalPropertiesIfNotPresent>false</disallowAdditionalPropertiesIfNotPresent>
	            </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <startClass>net.i2cat.scef.ScefApplication</startClass>
              <mainClass>org.springframework.boot.loader.JarLauncher</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
